{"ast":null,"code":"var _jsxFileName = \"D:\\\\my_app\\\\src\\\\components\\\\checkBox.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './components.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet currentState = [false, false, false, false, false, false, false, false, false];\n\nclass CheckBox extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      isChecked: false\n    };\n    this.handleChecked = this.handleChecked.bind(this);\n    this.id = props.id;\n    this.name = props.name;\n    this.call = props.callBack;\n  }\n\n  handleChecked() {\n    this.setState({\n      isChecked: !this.state.isChecked\n    });\n    currentState[parseInt(this.id)] = !this.state.isChecked;\n    this.call(currentState);\n  }\n\n  render() {\n    let txt = \"\";\n    if (currentState[parseInt(this.id)]) txt = \"hey\";else txt = \"bye\";\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"Checkbox\",\n        name: \"blue\",\n        value: \"yes\",\n        onChange: this.handleChecked\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          marginLeft: '-5%'\n        },\n        children: txt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 15\n    }, this);\n  }\n\n}\n\nexport default CheckBox;","map":{"version":3,"sources":["D:/my_app/src/components/checkBox.js"],"names":["React","ReactDOM","currentState","CheckBox","Component","constructor","props","state","isChecked","handleChecked","bind","id","name","call","callBack","setState","parseInt","render","txt","marginLeft"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AAIA,OAAO,kBAAP;;AAEA,IAAIC,YAAY,GAAG,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,EAA2C,KAA3C,EAAkD,KAAlD,EAAyD,KAAzD,CAAnB;;AAEA,MAAMC,QAAN,SAAuBH,KAAK,CAACI,SAA7B,CAAsC;AAClCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,SAAS,EAAE;AAAZ,KAAb;AAEA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKC,EAAL,GAAUL,KAAK,CAACK,EAAhB;AACA,SAAKC,IAAL,GAAYN,KAAK,CAACM,IAAlB;AAEA,SAAKC,IAAL,GAAYP,KAAK,CAACQ,QAAlB;AACD;;AAEDL,EAAAA,aAAa,GAAI;AACf,SAAKM,QAAL,CAAc;AAACP,MAAAA,SAAS,EAAE,CAAC,KAAKD,KAAL,CAAWC;AAAxB,KAAd;AACAN,IAAAA,YAAY,CAACc,QAAQ,CAAC,KAAKL,EAAN,CAAT,CAAZ,GAAkC,CAAC,KAAKJ,KAAL,CAAWC,SAA9C;AACA,SAAKK,IAAL,CAAUX,YAAV;AACD;;AAEDe,EAAAA,MAAM,GAAE;AACN,QAAIC,GAAG,GAAG,EAAV;AACA,QAAGhB,YAAY,CAACc,QAAQ,CAAC,KAAKL,EAAN,CAAT,CAAf,EACEO,GAAG,GAAG,KAAN,CADF,KAGEA,GAAG,GAAG,KAAN;AAEF,wBAAQ;AAAA,8BACL;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,IAAI,EAAC,MAA5B;AAAmC,QAAA,KAAK,EAAC,KAAzC;AAA+C,QAAA,QAAQ,EAAG,KAAKT;AAA/D;AAAA;AAAA;AAAA;AAAA,cADK,eAEL;AAAG,QAAA,KAAK,EAAE;AAACU,UAAAA,UAAU,EAAC;AAAZ,SAAV;AAAA,kBAA+BD;AAA/B;AAAA;AAAA;AAAA;AAAA,cAFK;AAAA;AAAA;AAAA;AAAA;AAAA,YAAR;AAID;;AA7BiC;;AAiCtC,eAAef,QAAf","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\n\r\n\r\nimport './components.css'\r\n\r\nlet currentState = [false, false, false, false, false, false, false, false, false];\r\n\r\nclass CheckBox extends React.Component{\r\n    constructor(props) {\r\n      super();\r\n      this.state = {isChecked: false};\r\n      \r\n      this.handleChecked = this.handleChecked.bind(this);\r\n      this.id = props.id;\r\n      this.name = props.name;\r\n\r\n      this.call = props.callBack;\r\n    }\r\n  \r\n    handleChecked () {\r\n      this.setState({isChecked: !this.state.isChecked});\r\n      currentState[parseInt(this.id)] = !this.state.isChecked;\r\n      this.call(currentState);\r\n    }\r\n  \r\n    render(){\r\n      let txt = \"\";\r\n      if(currentState[parseInt(this.id)])\r\n        txt = \"hey\";\r\n      else\r\n        txt = \"bye\"\r\n\r\n      return (<div>\r\n         <input type=\"Checkbox\" name=\"blue\" value=\"yes\" onChange={ this.handleChecked} />\r\n         <p style={{marginLeft:'-5%'}}>{txt}</p>\r\n      </div>)\r\n    }\r\n  }\r\n\r\n  \r\nexport default CheckBox"]},"metadata":{},"sourceType":"module"}