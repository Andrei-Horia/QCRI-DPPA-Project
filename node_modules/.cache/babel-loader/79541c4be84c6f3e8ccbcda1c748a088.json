{"ast":null,"code":"var _jsxFileName = \"D:\\\\my_app\\\\src\\\\components\\\\ArticleComponent.js\";\nimport '../App.css';\nimport { rawData } from '../storeData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction convertData(rawData) {\n  let result = []; //Loop through all the paragraphs\n\n  for (let i = 0; i < rawData.sentence_propaganda.length; i++) {\n    let currentParagraph = {};\n    let fixedStart = 0;\n    let start = 0;\n    let end = 0;\n    let text = \"\";\n    let first = true;\n    currentParagraph.annotations = []; //Loop through all the words\n\n    for (let j = 0; j < rawData.sentence_propaganda[i].tokens.length; j++) {\n      //Store text\n      text += rawData.sentence_propaganda[i].tokens[j] + \" \";\n      end += rawData.sentence_propaganda[i].tokens[j].length; //Remeber starting point (sicne we could have multiple consecutive words with the same color)\n\n      if (rawData.sentence_propaganda[i].tags[j] !== \"O\") if (first) {\n        first = false;\n        fixedStart = start;\n      } //Store \n\n      if (rawData.sentence_propaganda[i].tags[j] !== \"O\") if (j === rawData.sentence_propaganda[i].tokens.length || rawData.sentence_propaganda[i].tags[j] !== rawData.sentence_propaganda[i].tags[j + 1]) {\n        let annotations = {};\n        annotations.start = fixedStart;\n        annotations.end = end;\n        annotations.color = rawData.sentence_propaganda[i].tags[j];\n        currentParagraph.annotations.push(annotations);\n        first = true;\n      }\n      start = end + 1;\n      end++;\n    } //Store paragraph and push to result\n\n\n    currentParagraph.paragraph = text;\n    result.push(currentParagraph);\n  }\n\n  let data = {};\n  data.title = rawData.key;\n  data.paragraphs = result;\n  return data;\n}\n\nlet data = convertData(rawData);\n\nfunction Article() {\n  let HTMLElements = [];\n\n  for (let i = 0; i < data.paragraphs.length; i++) {\n    let paragraphElements = [];\n    let startingPoint = 0;\n    let stoppingPoint;\n    let current;\n\n    for (let j = 0; j < data.paragraphs[i].annotations.length; j++) {\n      stoppingPoint = data.paragraphs[i].annotations[j].start;\n      let end = data.paragraphs[i].annotations[j].end;\n      let color = data.paragraphs[i].annotations[j].color;\n      current = data.paragraphs[i].paragraph.slice(startingPoint, stoppingPoint);\n      paragraphElements.push( /*#__PURE__*/_jsxDEV(\"span\", {\n        children: current\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 36\n      }, this));\n      current = data.paragraphs[i].paragraph.slice(stoppingPoint, end);\n      paragraphElements.push( /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"highlight\",\n        style: {\n          backgroundColor: color\n        },\n        children: current\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 36\n      }, this));\n      startingPoint = end;\n    }\n\n    stoppingPoint = data.paragraphs[i].paragraph.length;\n    current = data.paragraphs[i].paragraph.slice(startingPoint, stoppingPoint);\n    paragraphElements.push( /*#__PURE__*/_jsxDEV(\"span\", {\n      children: current\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 32\n    }, this));\n    HTMLElements.push(paragraphElements);\n  }\n\n  HTMLElements = HTMLElements.map(word => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"paragraph\",\n      children: word\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 53\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"note\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"article-content\",\n      children: HTMLElements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"article-search-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        class: \"article-source\",\n        children: \" SOURCE \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n        rel: \"stylesheet\",\n        href: \"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"action_page.php\",\n        class: \"article-search-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search..\",\n          name: \"search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          class: \"article-search-button\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 73\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Article;\nexport default Article;\n\nvar _c;\n\n$RefreshReg$(_c, \"Article\");","map":{"version":3,"sources":["D:/my_app/src/components/ArticleComponent.js"],"names":["rawData","convertData","result","i","sentence_propaganda","length","currentParagraph","fixedStart","start","end","text","first","annotations","j","tokens","tags","color","push","paragraph","data","title","key","paragraphs","Article","HTMLElements","paragraphElements","startingPoint","stoppingPoint","current","slice","backgroundColor","map","word"],"mappings":"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","sourcesContent":["import '../App.css';\r\n\r\nimport { rawData } from '../storeData'\r\n\r\nfunction convertData(rawData){\r\n\r\n    let result = []    \r\n\r\n    //Loop through all the paragraphs\r\n    for(let i=0;i<rawData.sentence_propaganda.length;i++)\r\n    {\r\n        let currentParagraph = {}\r\n        let fixedStart = 0\r\n        let start = 0\r\n        let end = 0\r\n        let text = \"\"\r\n        let first = true\r\n\r\n\r\n        currentParagraph.annotations = []\r\n\r\n        //Loop through all the words\r\n        for(let j=0;j<rawData.sentence_propaganda[i].tokens.length;j++)\r\n        {\r\n            //Store text\r\n            text += rawData.sentence_propaganda[i].tokens[j] + \" \"   \r\n            end += rawData.sentence_propaganda[i].tokens[j].length\r\n            \r\n            //Remeber starting point (sicne we could have multiple consecutive words with the same color)\r\n            if(rawData.sentence_propaganda[i].tags[j] !== \"O\")\r\n                if(first)\r\n                {\r\n                    first = false\r\n                    fixedStart = start\r\n                }\r\n            \r\n            //Store \r\n            if(rawData.sentence_propaganda[i].tags[j] !== \"O\")    \r\n                if(j === rawData.sentence_propaganda[i].tokens.length || \r\n                    rawData.sentence_propaganda[i].tags[j] !== rawData.sentence_propaganda[i].tags[j+1])\r\n                {\r\n                    let annotations = {}\r\n                    annotations.start = fixedStart\r\n                    annotations.end = end\r\n                    annotations.color = rawData.sentence_propaganda[i].tags[j]\r\n                    currentParagraph.annotations.push(annotations)\r\n                    first = true\r\n                }   \r\n                 \r\n            start = end + 1\r\n            end++\r\n        }\r\n        \r\n        //Store paragraph and push to result\r\n        currentParagraph.paragraph = text\r\n        result.push(currentParagraph)\r\n    }\r\n\r\n    let data = {}\r\n    data.title = rawData.key\r\n    data.paragraphs = result\r\n\r\n    return data\r\n\r\n}\r\n\r\nlet data = convertData(rawData)\r\n\r\nfunction Article(){\r\n    \r\n    let HTMLElements = []\r\n    for(let i=0;i<data.paragraphs.length;i++)\r\n    {\r\n        let paragraphElements = []\r\n        let startingPoint = 0\r\n        let stoppingPoint\r\n        let current\r\n\r\n        for(let j=0;j<data.paragraphs[i].annotations.length;j++)\r\n        {\r\n            stoppingPoint = data.paragraphs[i].annotations[j].start\r\n            let end = data.paragraphs[i].annotations[j].end\r\n            let color = data.paragraphs[i].annotations[j].color\r\n\r\n            current = data.paragraphs[i].paragraph.slice(startingPoint, stoppingPoint)\r\n            paragraphElements.push(<span>{current}</span>)\r\n\r\n            current = data.paragraphs[i].paragraph.slice(stoppingPoint, end)\r\n            paragraphElements.push(<span className=\"highlight\" style={{backgroundColor:color}}>{current}</span>)\r\n        \r\n            startingPoint = end\r\n        }\r\n        \r\n        stoppingPoint = data.paragraphs[i].paragraph.length\r\n        current = data.paragraphs[i].paragraph.slice(startingPoint, stoppingPoint)\r\n        \r\n        paragraphElements.push(<span>{current}</span>)\r\n        \r\n        HTMLElements.push(paragraphElements)\r\n\r\n    }\r\n\r\n    \r\n    HTMLElements = HTMLElements.map(word => \r\n        <div><div className='paragraph'>{word}</div><br></br></div>)\r\n\r\n\r\n        return (\r\n        \r\n        <div class=\"note\">\r\n            <div class='article-content'>\r\n                {HTMLElements}\r\n            </div>\r\n\r\n            <div class='article-search-bar'> \r\n                <h1 class='article-source'> SOURCE </h1>\r\n\r\n                <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\"></link>\r\n                <form action=\"action_page.php\" class=\"article-search-form\">\r\n                    <input type=\"text\" placeholder=\"Search..\" name=\"search\"></input>\r\n                    <button type=\"submit\" class='article-search-button'><i></i></button>\r\n                </form>\r\n\r\n            </div>\r\n        </div>)\r\n}\r\nexport default Article;\r\n"]},"metadata":{},"sourceType":"module"}